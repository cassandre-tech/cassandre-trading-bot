import{_ as r,M as i,p as d,q as t,R as a,t as e,N as c,a1 as s}from"./framework-7e1a102e.js";const l={},o=s(`<h1 id="construire-cassandre-a-partir-des-sources" tabindex="-1"><a class="header-anchor" href="#construire-cassandre-a-partir-des-sources" aria-hidden="true">#</a> Construire Cassandre à partir des sources</h1><h2 id="construire-cassandre" tabindex="-1"><a class="header-anchor" href="#construire-cassandre" aria-hidden="true">#</a> Construire Cassandre</h2><h3 id="recuperez-les-sources-depuis-github" tabindex="-1"><a class="header-anchor" href="#recuperez-les-sources-depuis-github" aria-hidden="true">#</a> Récupérez les sources depuis Github</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone git@github.com:cassandre-tech/cassandre-trading-bot.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="allez-dans-le-repertoire-cassandre" tabindex="-1"><a class="header-anchor" href="#allez-dans-le-repertoire-cassandre" aria-hidden="true">#</a> Allez dans le répertoire Cassandre</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> cassandre-trading-bot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="construire-sans-les-tests" tabindex="-1"><a class="header-anchor" href="#construire-sans-les-tests" aria-hidden="true">#</a> Construire sans les tests</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token function">install</span> <span class="token parameter variable">-Dgpg.skip</span> <span class="token parameter variable">-DskipTests</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="construire-avec-les-tests" tabindex="-1"><a class="header-anchor" href="#construire-avec-les-tests" aria-hidden="true">#</a> Construire avec les tests</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token function">install</span> <span class="token parameter variable">-Dgpg.skip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="construire-la-documentation" tabindex="-1"><a class="header-anchor" href="#construire-la-documentation" aria-hidden="true">#</a> Construire la documentation</h2><h3 id="lancer-la-documentation-en-local" tabindex="-1"><a class="header-anchor" href="#lancer-la-documentation-en-local" aria-hidden="true">#</a> Lancer la documentation en local</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vuepress dev docs/src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),u={href:"http://0.0.0.0:8080/",target:"_blank",rel:"noopener noreferrer"},h=s(`<h3 id="construire-le-site-web-final" tabindex="-1"><a class="header-anchor" href="#construire-le-site-web-final" aria-hidden="true">#</a> Construire le site web final</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token parameter variable">--cwd</span> docs build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2);function p(b,v){const n=i("ExternalLinkIcon");return d(),t("div",null,[o,a("p",null,[e("Le site web de documentation sera disponible à l'adresse "),a("a",u,[e("http://0.0.0.0:8080/"),c(n)]),e(".")]),h])}const g=r(l,[["render",p],["__file","how-to-build-from-sources.html.vue"]]);export{g as default};
