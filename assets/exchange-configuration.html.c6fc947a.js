import{_ as t,o,c,b as a,a as s,d as n,e as i,r}from"./app.d5beeed6.js";const p={},l=a("h1",{id:"exchange-configuration",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#exchange-configuration","aria-hidden":"true"},"#"),n(" Exchange configuration")],-1),d=n("For the moment, we only ran tests, so we never had to connect to the exchange we want to use. Now, let's suppose our strategy is ready to deal with real assets and that we want to use "),u={href:"https://www.kucoin.com/ucenter/signup?rcode=2HMJtt1",target:"_blank",rel:"noopener noreferrer"},h=n("Kucoin"),g=n("."),k=n("The first step is to add the right XChange library to your project. It's a bit like adding a JDBC driver. Go to the "),m={href:"https://github.com/knowm/XChange",target:"_blank",rel:"noopener noreferrer"},v=n("XChange"),_=n(" website, find the corresponding directory. In our case, it's "),b={href:"https://github.com/knowm/XChange/tree/develop/xchange-kucoin",target:"_blank",rel:"noopener noreferrer"},x=n("xchange-kucoin directory"),f=n("."),w=n("Inside this directory, you have to find the name of the class extending "),y=a("code",null,"BaseExchange",-1),I=n(" and implementing "),C=a("code",null,"Exchange",-1),E=n(". In our case, it's "),N={href:"https://github.com/knowm/XChange/blob/develop/xchange-kucoin/src/main/java/org/knowm/xchange/kucoin/KucoinExchange.java",target:"_blank",rel:"noopener noreferrer"},X=n("org.knowm.xchange.kucoin.KucoinExchange"),B=n(" . This name will be used in our "),j=a("code",null,"application.properties",-1),K=n(" file for the "),V=a("code",null,"driver-class-name",-1),L=n(" property."),T=i(`<p>Now, we can edit our application configuration located in <code>src/main/resources/application.properties</code> to change the following properties with the parameters given by the exchange:</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">cassandre.trading.bot.exchange.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">org.knowm.xchange.kucoin.KucoinExchange</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.username</span><span class="token punctuation">=</span><span class="token value attr-value">kucoin.cassandre.test@gmail.com</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.passphrase</span><span class="token punctuation">=</span><span class="token value attr-value">cassandre</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.key</span><span class="token punctuation">=</span><span class="token value attr-value">61d0c8a041a5330001d0d59c</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.secret</span><span class="token punctuation">=</span><span class="token value attr-value">79edb229-a9c8-449d-a476-04689eaf376b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We also have to add the XChange library to our project <code>pom.xml</code> (the artifactId is Github directory name corresponding to the exchange you chose):</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.knowm.xchange<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xchange-kucoin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Last thing, as we are running in production, the two modes (dry &amp; sandbox) must be set to false:</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">cassandre.trading.bot.exchange.modes.sandbox</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">cassandre.trading.bot.exchange.modes.dry</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function G(J,D){const e=r("ExternalLinkIcon");return o(),c("div",null,[l,a("p",null,[d,a("a",u,[h,s(e)]),g]),a("p",null,[k,a("a",m,[v,s(e)]),_,a("a",b,[x,s(e)]),f]),a("p",null,[w,y,I,C,E,a("a",N,[X,s(e)]),B,j,K,V,L]),T])}var H=t(p,[["render",G],["__file","exchange-configuration.html.vue"]]);export{H as default};
