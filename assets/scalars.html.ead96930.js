import{_ as r,o as s,c as n,b as e,a as o,d as a,e as i,r as c}from"./app.d5beeed6.js";const d={},h=e("h1",{id:"scalars",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#scalars","aria-hidden":"true"},"#"),a(" Scalars")],-1),l=e("h3",{id:"about-scalars",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#about-scalars","aria-hidden":"true"},"#"),a(" About scalars")],-1),p={href:"https://graphql.github.io/graphql-spec/June2018/#sec-Scalars",target:"_blank",rel:"noopener noreferrer"},u=a("Scalars"),_=a(" are primitive values: "),f=e("code",null,"Int",-1),b=a(", "),g=e("code",null,"Float",-1),m=a(", "),x=e("code",null,"String",-1),y=a(", "),I=e("code",null,"Boolean",-1),v=a(", or "),S=e("code",null,"ID",-1),T=a("."),E=i('<p>When calling the GraphQL API, you must specify nested subfields until you return only scalars.</p><h3 id="bigdecimal" tabindex="-1"><a class="header-anchor" href="#bigdecimal" aria-hidden="true">#</a> BigDecimal</h3><hr><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> Boolean</h3><p>The <code>Boolean</code> scalar type represents <code>true</code> or <code>false</code>.</p><hr><h3 id="datetime" tabindex="-1"><a class="header-anchor" href="#datetime" aria-hidden="true">#</a> DateTime</h3><hr><h3 id="float" tabindex="-1"><a class="header-anchor" href="#float" aria-hidden="true">#</a> Float</h3><p>The <code>Float</code> scalar type represents signed double-precision fractional values as specified by <a href="http://en.wikipedia.org/wiki/IEEE_floating_point">IEEE 754</a>.</p><hr><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> ID</h3><p>The <code>ID</code> scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \u201C4\u201D) or integer (such as 4) input value will be accepted as an ID.</p><hr><h3 id="int" tabindex="-1"><a class="header-anchor" href="#int" aria-hidden="true">#</a> Int</h3><p>The <code>Int</code> scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.</p><hr><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h3><p>The <code>String</code>scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.</p><hr>',20);function k(B,D){const t=c("ExternalLinkIcon");return s(),n("div",null,[h,l,e("p",null,[e("a",p,[u,o(t)]),_,f,b,g,m,x,y,I,v,S,T]),E])}var N=r(d,[["render",k],["__file","scalars.html.vue"]]);export{N as default};
