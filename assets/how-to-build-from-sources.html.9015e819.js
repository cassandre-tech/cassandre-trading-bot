import{_ as i,r as d,o as t,c as r,b as a,d as e,a as l,e as s}from"./app.4d6819e9.js";const c={},o=s(`<h1 id="build-from-sources" tabindex="-1"><a class="header-anchor" href="#build-from-sources" aria-hidden="true">#</a> Build from sources</h1><h2 id="build-cassandre" tabindex="-1"><a class="header-anchor" href="#build-cassandre" aria-hidden="true">#</a> Build Cassandre</h2><h3 id="get-the-sources-from-github" tabindex="-1"><a class="header-anchor" href="#get-the-sources-from-github" aria-hidden="true">#</a> Get the sources from Github</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone git@github.com:cassandre-tech/cassandre-trading-bot.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="move-to-the-source-directory" tabindex="-1"><a class="header-anchor" href="#move-to-the-source-directory" aria-hidden="true">#</a> Move to the source directory</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> cassandre-trading-bot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="build-install-without-test" tabindex="-1"><a class="header-anchor" href="#build-install-without-test" aria-hidden="true">#</a> Build &amp; install without test</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token function">install</span> <span class="token parameter variable">-Dgpg.skip</span> <span class="token parameter variable">-DskipTests</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="build-install" tabindex="-1"><a class="header-anchor" href="#build-install" aria-hidden="true">#</a> Build &amp; install</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token function">install</span> <span class="token parameter variable">-Dgpg.skip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="build-documentation" tabindex="-1"><a class="header-anchor" href="#build-documentation" aria-hidden="true">#</a> Build documentation</h2><h3 id="run-local-documentation" tabindex="-1"><a class="header-anchor" href="#run-local-documentation" aria-hidden="true">#</a> Run local documentation</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vuepress dev docs/src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),u={href:"http://0.0.0.0:8080/",target:"_blank",rel:"noopener noreferrer"},h=s(`<h3 id="build-static-website" tabindex="-1"><a class="header-anchor" href="#build-static-website" aria-hidden="true">#</a> Build static website</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token parameter variable">--cwd</span> docs build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2);function b(m,p){const n=d("ExternalLinkIcon");return t(),r("div",null,[o,a("p",null,[e("Documentation website will be accessible at "),a("a",u,[e("http://0.0.0.0:8080/"),l(n)]),e(".")]),h])}const g=i(c,[["render",b],["__file","how-to-build-from-sources.html.vue"]]);export{g as default};
